{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hplap\\\\OneDrive\\\\Desktop\\\\Assment\\\\Assements\\\\todolist2.0\\\\src\\\\Todo\\\\Today.js\";\nimport React from \"react\";\nimport Listrender from \"./Listrender\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Today(props) {\n  const date = new Date();\n  const filteredList = props.list.filter(task => {\n    if (date.getFullYear() !== task.date.getFullYear()) {\n      return false;\n    }\n    if (date.getMonth() !== task.date.getMonth()) {\n      return false;\n    }\n    if (date.getDate() !== task.date.getDate()) {\n      return false;\n    }\n    return true;\n  });\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Listrender, {\n        list: filteredList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_c = Today;\nconst MainContainer = styled.div`\n  text-align: center;\n\n  div {\n    color: white;\n    background-color: crimson;\n    text-align: center;\n    font-family: \"Open Sans\", sans-serif;\n    border-radius: 5px;\n    display: inline-flex;\n    flex-direction: column;\n    padding: 4px;\n  }\n`;\n_c2 = MainContainer;\nvar _c, _c2;\n$RefreshReg$(_c, \"Today\");\n$RefreshReg$(_c2, \"MainContainer\");","map":{"version":3,"names":["React","Listrender","Today","props","date","Date","filteredList","list","filter","task","getFullYear","getMonth","getDate","MainContainer","styled","div"],"sources":["C:/Users/hplap/OneDrive/Desktop/Assment/Assements/todolist2.0/src/Todo/Today.js"],"sourcesContent":["import React from \"react\";\r\nimport Listrender from \"./Listrender\";\r\n\r\nexport default function Today(props) {\r\n  const date = new Date();\r\n  const filteredList = props.list.filter((task) => {\r\n    if (date.getFullYear() !== task.date.getFullYear()) {\r\n      return false;\r\n    }\r\n    if (date.getMonth() !== task.date.getMonth()) {\r\n      return false;\r\n    }\r\n    if (date.getDate() !== task.date.getDate()) {\r\n      return false;\r\n    }\r\n    return true;\r\n  });\r\n  return (\r\n    <MainContainer>\r\n      <div>\r\n        <Listrender list={filteredList} />\r\n      </div>\r\n    </MainContainer>\r\n  );\r\n}\r\n\r\nconst MainContainer = styled.div`\r\n  text-align: center;\r\n\r\n  div {\r\n    color: white;\r\n    background-color: crimson;\r\n    text-align: center;\r\n    font-family: \"Open Sans\", sans-serif;\r\n    border-radius: 5px;\r\n    display: inline-flex;\r\n    flex-direction: column;\r\n    padding: 4px;\r\n  }\r\n`;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,cAAc;AAAC;AAEtC,eAAe,SAASC,KAAK,CAACC,KAAK,EAAE;EACnC,MAAMC,IAAI,GAAG,IAAIC,IAAI,EAAE;EACvB,MAAMC,YAAY,GAAGH,KAAK,CAACI,IAAI,CAACC,MAAM,CAAEC,IAAI,IAAK;IAC/C,IAAIL,IAAI,CAACM,WAAW,EAAE,KAAKD,IAAI,CAACL,IAAI,CAACM,WAAW,EAAE,EAAE;MAClD,OAAO,KAAK;IACd;IACA,IAAIN,IAAI,CAACO,QAAQ,EAAE,KAAKF,IAAI,CAACL,IAAI,CAACO,QAAQ,EAAE,EAAE;MAC5C,OAAO,KAAK;IACd;IACA,IAAIP,IAAI,CAACQ,OAAO,EAAE,KAAKH,IAAI,CAACL,IAAI,CAACQ,OAAO,EAAE,EAAE;MAC1C,OAAO,KAAK;IACd;IACA,OAAO,IAAI;EACb,CAAC,CAAC;EACF,oBACE,QAAC,aAAa;IAAA,uBACZ;MAAA,uBACE,QAAC,UAAU;QAAC,IAAI,EAAEN;MAAa;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA;EAC9B;IAAA;IAAA;IAAA;EAAA,QACQ;AAEpB;AAAC,KArBuBJ,KAAK;AAuB7B,MAAMW,aAAa,GAAGC,MAAM,CAACC,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MAbIF,aAAa;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}